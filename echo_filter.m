% function echo_filter:
%     1) υπολογίζει και επιστρέφει την κρουστική απόκριση h του ΓΧΑ συστήματος
%     2) φιλτράρει το σήμα εισόδου signal και παράγει την έξοδο y_echo
%
% ΕΙΣΟΔΟΙ:
% signal = σήμα εισόδου που θέλετε να βάλετε ηχώ
% times = διάνυσμα που περιέχει τις χρονικές στιγμές - σε δευτερόλεπτα - που θέλουμε να 
%         ξεκινά μια ηχώ επάνω στο σήμα εισόδου 
% attenuations = διάνυσμα που περιέχει το πλάτος της κάθε ηχούς στις αντίστοιχες χρονικές
%                στιγμές που έχετε ορίσει στο διάνυσμα times επάνω
% fs = συχνότητα δειγματοληψίας του σήματος, επιστρέφεται από την audioread
%
% ΕΞΟΔΟΙ:
% y_echo = έξοδος του ΓΧΑ συστήματος (σήμα με ηχώ)
% h = κρουστική απόκριση του ΓΧΑ συστήματος που υλοποιεί την ηχώ

function [y_echo, h] = echo_filter_tostudents(signal, times, attenuations, fs)

% Ο πρώτος συντελεστής του φίλτρου h(t) για t = 0
h(1) = % INSERT CODE HERE 

% Υπολογισμός της κρουστικής απόκρισης h(t) = δ(t) + Σ a_i δ(t - t_i)
for i = 1:length(times) % για όσες χρονικές στιγμές έχετε ορίσει στο διάνυσμα times

    % Μετατρέψτε τις χρονικές στιγμές σε δείγματα
    samples(i) = % INSERT CODE HERE  
	
    % Θέστε τα σωστά πλάτη για κάθε χρονική στιγμή t_i
    h(floor(samples(i))) = % INSERT CODE HERE  
end

% φιλτράρισμα του σήματος - παραγωγή της εξόδου μέσω της πράξης της συνέλιξης
% χρησιμοποιήστε τη συνάρτηση conv του MATLAB κατευθείαν επάνω στα σήματα της
% κρουστικής απόκρισης και της εισόδου (χωρίς κάποιο scaling της conv)
y_echo = % INSERT CODE HERE  
